[MainWindow.Antivirus_Filters_Menu]
@           = at(enum) v(ctl.parent.parent.value)
ByTime      = at(radiolike)
AllItems    = at(radiolike)
ByApp       = at(radiolike)
ByVerdict   = at(radiolike)

[MainWindow.Antivirus_Filters]
ByTime      = v("1400010001f4;Ob10000000c8;Ev1000000096;Ti1420000096;Ap00020000a1;Na000000003c;Pa00000000c8;PI000000005a;Co000000005a;Re20020000aa;")
AllItems    = v("1400010001f4;Ob10000000c8;Ev1000000096;Ti1020000096;Ap00020000a1;Na000000003c;Pa00000000c8;PI000000005a;Co000000005a;Re20020000aa;")
ByApp       = v("140001000295;Ob10000000c8;Ev1000000096;Ti1020000096;Ap04000000a1;Na000000003c;Pa00000000c8;PI000000005a;Co000000005a;Re20020000aa;")
ByVerdict   = v("1400010001f4;Ob10000000c8;Ev1400000096;Ti1020000096;Ap00020000a1;Na000000003c;Pa00000000c8;PI000000005a;Co000000005a;Re20020000aa;")

[MainReport.File_Monitoring]
@ = [ProfileReport] subst(Group1([MainReport.File_Monitoring_Events]) Descr([MainReport.Protection_Events_Descr]) ActionsArea(subst(Other(subst(GroupFilter(onclick(ctl.menu("MainWindow.Antivirus_Filters_Menu"))))))) ) ext(1)

[MainReport.File_Monitoring_Events]
@ = ext(1)
d = [Product_Events] subst(Report(filter(TaskID==#eTASK_FAV) prm(#dbRTP)) Application(at(hidden)) Task(use(0)) Action(use(0)) views([MainWindow.Antivirus_Filters])) extprm(1)

[MainReport.Mail_Monitoring]
@ = [MainReport.File_Monitoring] subst(Group1(subst(d(subst(Report(  filter(TaskID==#eTASK_MAV)) Object(text(ObjectType == #eMailMessage ? $ObjectText : $ObjectNameText )) )))) Stat(use(0)) )

[MainReport.Web_Monitoring]
@ = [MainReport.File_Monitoring] subst(Group1(subst(d(subst(Report(  filter(TaskID==#eTASK_HTTP) ))))) Stat(use(0)))

[MainReport.IM_Monitoring]
@ = [MainReport.File_Monitoring] subst(Group1(subst(d(subst(Report(  filter(TaskID==#eTASK_IM_CHECK) ))))) Stat(use(0)))

[MainReport.Firewall]
$parOnChange = onchange( ctl.parent.parent.Group1.Report.setfilter(s_LogFilter(ctl.value), 11) )
; ----
@ = [ProfileReport] subst(Group1([MainReport.NetworkMonitor_Log]) SeverityFilter( use(0) ) ActionsArea(subst(Other(subst(GroupFilter(onclick(ctl.menu("MainReport.Network_Packets_View")) $parOnChange ))))) Descr([MainReport.Network_Packets_Log_Descr] ) ) ext(1)

[MainReport.NetworkMonitor_Log]
@ = ext(1)
d = [NetworkMonitor_Log] subst( Report( prm(#dbNetworkPacketRules) )  )  extprm(1)

[NetworkMonitor_Log]
@       = ext(1) sz(p,p)
Report   = [MainReport.Network_Packets_Log]

[MainReport.Network_Packets_Log]
$dayWeek = (getFilterValue(ctl.id) <= -2 && getFilterValue(ctl.id) >= -8)
@           = $List at(rememberdata,noborder) alias(firewallpackets) refresh(100) extprm(1) onshow(ctl.setfilter(ctl.Filter.value,10))
App         = sz(190) text(if(AppID, $AppName)) i(if(AppID, $AppIcon))
Event       = sz(155) text( $NetTextProto + "   " + $NetTextVerdict ) i( $NetIconState )
Time        = sz(150) text(datetimeDT(Timestamp)) group(date,dategroupDT(Timestamp),default) sort(index,sortdown) filter(auto,s_date(dategroupDT(Timestamp, $dayWeek))) extprm(1)
LocalAddr   = sz(100) text(ip(LocalIP)) group(FwAddrL, l_ipHash = ipHash(LocalIP); c_ipHash(l_ipHash, LocalIP); l_ipHash) visible(0)
LocalPort   = sz(50) text(if(LocalPort, LocalPort)) group(FwPortL, LocalPort) visible(0)
NetSeverity = sz(160) text(s_NetSeverity(NetSeverity)) i(s_NetZoneTypeIcon(NetSeverity)) visible(0)
;RuleName    = sz(120) text(object(HipsResourceID)) visible(0)
row         = at(clickable) i((Flags & 0x02) ? "void16" : "med") onrclick(menu("NetworkMonitor_Tab_Packets_Log.Menu"))

[MainReport.Network_Packets_Log_Descr]
Title           = [Network_Packets_Log_Descr_Title]
Application     = [MainReport_ListRowDesc] subst( Val(subst(Name(text($AppName))    Icon(i($AppIcon))))) visible(AppID)
RemoteAddrPort  = [MainReport_ListRowDesc] subst( Val(subst(Name(text(ip(RemoteIP) + if(RemotePort, ": " + RemotePort) ))    )))
Port            = [MainReport_ListRowDesc] subst( Val(subst(Name(text(LocalPort))   ))) visible(LocalPort)
Time            = a(rt) xy(,1) f("Normal_Grey") text(datetimeDT(Timestamp))

[Network_Packets_Log_Descr_Title]
@ = sz(a,a)
Icon = a(lc) i($NetIconVerdict)
Text = a(ac) f("Normal_Bold") text( $NetTextProto + "   " + $NetTextVerdict ) i( $NetIconState )


[MainReport.Network_Packets_View]
@           = at(enum) v(ctl.parent.parent.value) sz(a,a)
AllItems    = at(radiolike)
Blocked     = at(radiolike)
BlockedIn   = at(radiolike)
BlockedOut  = at(radiolike)
Allowed     = at(radiolike)
AllowedIn   = at(radiolike)
AllowedOut  = at(radiolike)
CreateRule	= at(radiolike)

[MainReport.ids]
@ = [MainReport.File_Monitoring] subst(Group1(subst(d(subst(Report(  filter(TaskID==#eTASK_IDS) ))))) Stat(use(0)) )

[MainReport.Anti_Spam]
@ = [MainReport.File_Monitoring] subst(Group1(subst(d(subst(Report(  filter(TaskID==#eTASK_AS)) Path(use(0)) Object(text($ObjectText)))))) Stat(use(0)) )

[MainReport.AdBlocker]
@ = [ProfileReport] subst(Group1([MainReport.App_Monitoring_Events] subst(d(subst(Report(filter(TaskID==#eTASK_AB)) Task(use(0)))))) Descr([MainReport.AdBlocker_Events_Descr]) ActionsArea(subst(Other(subst(GroupFilter(onclick(ctl.menu("MainWindow.Hips_Filters_Menu"))))))) Stat(use(0)) ) ext(1)

[MainReport.AdBlocker_Events_Descr]
@ = mg(12,16)
Title   = [Protection_Events_Descr_Title]
Event   = [MainReport_ListRowDesc] subst(Name() Val(subst(Name(text($ProductEventTextShort))))) visible(ctl.Val.Name.text && ctl.Val.Name.text != ctl.parent.parent.Title.Title.text)
Reason  = [MainReport_ListRowDesc] subst(Name() Val(subst(Name(text($ReasonText)))))
App     = [MainReport_ListRowDesc] subst(Name() Val(subst(Name(text($AppName))       Icon(i($AppIcon)))))
Time    = a(rt) xy(,1) f("Normal_Grey") text(datetimeDT(Timestamp))

[MainReport.SW2]
@ = [MainReport.File_Monitoring] subst(Group1(subst(d(subst(Report(  filter(TaskID==#eTASK_SW2) ))))) Stat(use(0)))

[FileMonSettings]
@    = [StyledWindowT_Small_Tab] at(dragable,a_ok,a_cancel) subst( BodyEx( [FileMonSettings_Tab] ) ) sz(368,a) alias(taskedit) text($ProfileName)

[FileMonSettings_Tab]
@           = $Tab sz(p,a) at(rememberdata)
Scope       = [FileMonSettings_Tab_Scope] mg(7,7) h(15523)
Performance = [FileMonSettings_Tab_Performance] mg(7,7) h(15524)
Additional  = [FileMonSettings_Tab_Additional] mg(7,7) h(15522)

[FileMonSettings_Tab_Scope]
@               = sz(p,a) 
FileTypesGroup  = [FileMonSettings_Tab_Scope_FileTypesGroup]
Area            = [FileMonSettings_Tab_Scope_Area]

[FileMonSettings_Tab_Scope_FileTypesGroup]
@           = $SettingsGroup v(ScanFilter) xy(0,)
All         = $Radio v(1)
Infectable  = $Radio xy(,7) v(0)
Predefined  = $Radio xy(,7) v(2)
HelpLink    = t(hotlink) a(as) xy(,-5) i("info,0,1,0,0,0,1") onclick(help(5015))

[FileMonSettings_Tab_Scope_Area]
@           = $SettingsGroup sz(p,p) xy(0,10) onok(if(ScanObjects.size("Enabled")==0,balloon(ctl.InclList, "ScanObjectsEmpty")))
InclList    = [FileMonSettings_Tab_Scope_Area_InclList]

[FileMonSettings_Tab_Scope_Area_InclList]
@       = $List at(noheader) alias(vector.ScanObject.OAS) v(ScanObjects) unique(ObjectType == newItem.ObjectType && ScanObjects == newItem.ScanObjects) id(ObjectType)
Object  = sz(p) rs(100) at(checked) i(s_ScanObjectIcon(ObjectType)) text(s_ScanObjectName(ObjectType)) v(Enabled)
footer  = [Grid.Footer2.Template] subst(Delete(enable(!System && (depend(ctl.selcount()) > 0 )) onclick(msg("DeleteItemsConfirm", #m_yesno))) Edit(enable(!System && (depend(ctl.selcount()) > 0 ))))

[FileMonSettings_Tab_Performance]
@                   = sz(p,a)
FirstTimeCheck      = [FileMonSettings_Tab_Performance_FirstTimeCheck]
FileTypesGroup      = [FileMonSettings_Tab_Performance_FileTypesGroup]
CompoundFilesGroup  = [CompoundFilesGroup]

[FileMonSettings_Tab_Performance_FirstTimeCheck]
@           = $SettingsGroup xy(0,)  onok( EmulScriptEnable = EmulEnable; EmulScriptValue = switch(ctl.HeurParams.Val.value, "EmulatorJIMLevels_OAS"))
Sign        = t(check) sz(a,a) v(1) enable(0)
Heur        = t(check) sz(a,a) a(la) xy(,7) v(EmulEnable)
HeurParams  = [HeuristicParams] enable(EmulEnable) subst(Val(v(bswitch(EmulValue,"EmulatorLevels_OAS"))))

[FileMonSettings_Tab_Performance_FileTypesGroup]
@           = $SettingsGroup
CheckNew    = t(check) sz(a,a) v(invert(ScanUnchangedObjects))

[FileMonSettings_Tab_Additional]
@           = sz(p,a)
ScanMode    = [FileMonSettings_Tab_Additional_ScanMode]
Tecnologies = [FileMonSettings_Tab_Additional_Tecnologies]
PauseTask   = [PauseTaskGroup]

[FileMonSettings_Tab_Additional_ScanMode]
@               = $SettingsGroup v(WorkingMode) xy(0,)
CheckModeSmart  = t(radio) v(4) sz(a,a)
CheckModeAll    = t(radio) v(0) a(la) sz(a,a) xy(,7)
CheckModeOpen   = t(radio) v(3) a(la) sz(a,a) xy(,7)
CheckModeExec   = t(radio) v(2) a(la) sz(a,a) xy(,7)

[FileMonSettings_Tab_Additional_Tecnologies]
@       = $SettingsGroup
Swift   = t(check) sz(a,a) a(la) v(UseIStreams)
Check   = t(check) sz(a,a) a(la) xy(,7) v(UseIChecker)

[CompoundFilesGroup]
@           = $SettingsGroup ext(1)
Archive     = $Check v(ScanArchived) a(lt) use(type != "oas")
SFX         = $Check xy(,7) v(ScanSFXArchived)
OLE         = $Check xy(,7) v(ScanOLE)
Mail        = t(check) sz(a,a) a(la) xy(,7) use(type == "ods") v(ScanMailBases)
AskPwd      = t(check) sz(a,a) a(la) xy(,7) use(type == "ods" && !$IsKAT) v(AskPassword)
Advanced    = $Button sz(a,24) onclick(dialog("CompoundFilesSettings")) a(la) xy(,7)

[MailMonSettings]
@    = [StyledWindowT_Small_Tab] at(dragable,a_ok,a_cancel) subst( BodyEx( [MailMonSettings_Tab] ) ) sz(368,a) alias(taskedit) text($ProfileName)

[MailMonSettings_Tab]
@           = $Tab sz(p,a) at(rememberdata) mg(7,7)
Scope       = [MailMonSettings_Tab_Scope] h(14613)
Filter      = [MailMonSettings_Tab_Filter] mg(7,7) h(14915)
Extra		= [MailMonSettings_Tab_Extra] h(14914)

[MailMonSettings_Tab_Scope]
@				= sz(p,a)
Directions		= [MailMonSettings_Tab_Scope_Directions]
;FilterMethods	= [MailMonSettings_Tab_Scope_Filter_Methods]
;Notifications	= [MailMonSettings_Tab_Scope_Notifications]
Methods			= [MailMonSettings_Tab_Scope_Methods]
CompoundFiles	= [MailMonSettings_Tab_Scope_CompoundFiles]

[MailMonSettings_Tab_Scope_Directions]
@				= $SettingsGroup v(CheckIncomingMessagesOnly) xy(0,)
All				= $Radio sz(a,a) v(0)
Incoming		= $Radio sz(a,a) a(la) xy(,7) v(1)

[MailMonSettings_Tab_Scope_Notifications]
@				= $SettingsGroup v(SignMessagesType)
None			= $Radio sz(a,a) v(0)
All				= $Radio sz(a,a) v(1)  xy(,7)
Incoming		= $Radio sz(a,a) a(la) xy(,7) v(2)

[MailMonSettings_Tab_Scope_Methods]
@           = $SettingsGroup xy(0,7) onok( EmulScriptEnable = EmulEnable; EmulScriptValue = switch(ctl.HeurParams.Val.value, "EmulatorJIMLevels_Web"))
Heur        = t(check) sz(a,a) a(la) v(EmulEnable)
HeurParams  = [HeuristicParams] a(la) enable(EmulEnable) subst(Val(v(bswitch(EmulValue,"EmulatorLevels_Web"))))

[MailMonSettings_Tab_Scope_CompoundFiles]
@               = $SettingsGroup
Archive         = $Check v(invert(ScanArchived))
SkipSizeCheck   = $Check a(la) xy(,7) v(UseSizeLimit)
SkipSizeLabel   = a(rs) sz(25,a) enable(UseSizeLimit)
SkipSizeValue   = t(edit) at(number) nl(1,9999) a(ps) sz(50,a) xy($Edit_CommentOffsetX,$Edit_CenterOffsetY) v(SizeLimit) enable(UseSizeLimit)

[MailMonSettings_Tab_Extra]
@               = sz(p,a)
Plugins			= [MailMonSettings_Tab_Extra_Plugins]

[MailMonSettings_Tab_Extra_Plugins]
@               = $SettingsGroup xy(0,)
MailTraffic     = $Check v(CheckTrafficMonitorMessages)
ClientOutlook   = $Check xy(,7) v(bmask(SetOfExternalPlugins, #mpOutlook ))
ClientTheBat    = $Check xy(,7) v(bmask(SetOfExternalPlugins, #mpTheBat))

[MailMonSettings_Tab_Filter]
@           = sz(p,a) v(DetectByMaskAction)
Skip        = t(radio) sz(a,a) v(#ACTION_UNKNOWN) xy(,2)
Rename      = t(radio) sz(a,a) a(la) xy(,7) v(#ACTION_RENAME)
Delete      = t(radio) sz(a,a) a(la) xy(,7) v(#ACTION_DELETE)
FileTypes   = [MailMonSettings_Tab_Filter_FileTypes]

[MailMonSettings_Tab_Filter_FileTypes]
@       = sz(p,210) a(la) xy(,7)
List    = [MailMonSettings_Tab_Filter_FileTypes_List]

[MailMonSettings_Tab_Filter_FileTypes_List]
@       = $List at(noheader) a(lp) enable(DetectByMaskAction != #ACTION_UNKNOWN) v(DetectMasksList) alias(vector) unique(tolower(Name) == tolower(newItem.Name))
Name    = sz(a,a) at(checked) text(Name) v(Enabled)
footer  = [Grid.Footer2.Template] subst(Add(onclick(dialog("MailAttachmentFilter_Edit"))))

[IMMonSettings]
@  = [StyledWindowT_Small] at(dragable,a_ok,a_cancel) subst( BodyEx( [IMMonSettings_Scope] ) ) sz(368,a) alias(taskedit) text($ProfileName) h(14648)

[IMMonSettings_Scope]
@				= sz(p,a)
Directions		= [IMMonSettings_Directions]
FilterMethods	= [IMMonSettings_Filter_Methods]

[IMMonSettings_Directions]
@				= $SettingsGroup v(CheckIncomingMessagesOnly) xy(0,)
All				= $Radio sz(a,a) v(0) xy(7,)
Incoming		= $Radio sz(a,a) a(la) xy(7,7) v(1) 

[IMMonSettings_Filter_Methods]
@				= $SettingsGroup xy(0,7)  onok( EmulScriptEnable = EmulEnable; EmulScriptValue = switch(ctl.HeurParams.Val.value, "EmulatorJIMLevels_Web"))
EnableWMUFCheck	= $Check v(UseWMUF) xy(7,)
EnableAntiphishingCheck = $Check xy(7,7) v(UseAntiphishing)
UseHeuristic	= t(check) sz(a,a) xy(7,7) a(la) v(EmulEnable)
HeurParams		= [HeuristicParams] xy(7,7) a(la) enable(EmulEnable) subst(Val(v(bswitch(EmulValue,"EmulatorLevels_Web"))))

[WebMonSettings]
$attribute = at(dragable,a_ok,a_cancel,minimizable,fixstyle)
@          = [StyledWindowT_Small] $attribute subst( BodyEx( [WebMonSettings_Body] ) ) sz(450,a) alias(taskedit) text($ProfileName) h(14614)

[WebMonSettings_Body]
Methods		= [WebMonSettings_Methods]
GreenZone	= [WebMonSettings_GreenZone]
Restrictions= [WebMonSettings_Restrictions]
Additions	= [WebMonSettings_Additions]

[WebMonSettings_Methods]
$shtx     = 5
$shty     = 7
@						= $SettingsGroup xy(0,)  onok( httpscan.EmulScriptEnable = httpscan.EmulEnable; httpscan.EmulScriptValue=httpscan.EmulValue)
EnableWMUFCheck 		= t(check) sz(a,a) v(httpscan.HTTPSettings.UseWMUF) a(la) xy(,4,,$shty) 
EnableAntiphishingCheck = t(check) sz(a,a) v(httpscan.HTTPSettings.UseAntiphishing) a(la) xy(,,,$shty)
Heur					= t(check) sz(a,a) a(la) xy(,,,$shty) v(httpscan.EmulEnable)
HeurParams				= [HeuristicParams] enable(httpscan.EmulEnable) subst(Val(v(bswitch(httpscan.EmulValue,"EmulatorLevels_Web"))))

[WebMonSettings_GreenZone]
@					= $SettingsGroup sz(p,a) a(la) xy(,14)
UseGeoSecurity		= t(check) xy(10,,,7) sz(a,a) v(httpscan.HTTPSettings.UseGeoSecurity) a(la)
GeoSecurityButton	= $Button_Medium a(rs) onclick(dialog("GeoSecuritySettingsDlg")) enable(httpscan.HTTPSettings.UseGeoSecurity)
UseCloudService		= t(check) xy(10,,,7) sz(a,a) v(httpscan.HTTPSettings.UseCloudService) a(la)
BrowserPluginCheck 	= t(check) xy(10,,113,7) sz(a,a) v(WebToolBar.PluginEnabled) a(la)
BrowserPluginButton	= $Button_Medium a(rs) onclick(dialog("WebToolbar_Plugin.InProductSettings_Dlg")) enable(WebToolBar.PluginEnabled)

[WebMonSettings_Restrictions]
@                   = $SettingsGroup sz(p,a) a(la) xy(,14)
UseBufCacheTime     = $Check xy(10,7) v(httpscan.HTTPSettings.UseTimeLimit)
BufCacheTimeLabel   = a(rs) sz(25,a) enable(httpscan.HTTPSettings.UseTimeLimit)
BufCacheTime        = t(edit) at(number) nl(1,9999) a(ps) sz(50,a) xy($Edit_CommentOffsetX,$Edit_CenterOffsetY) v(httpscan.HTTPSettings.TimeLimit) enable(httpscan.HTTPSettings.UseTimeLimit)
EnableWhiteList     = $Check a(la) xy(10,10) v(httpscan.UseTrustedSites)
Settings			= $Button xy(5,-4) a(rs) onclick(windowDlg("WebMonSettingsWhiteList")) enable(httpscan.UseTrustedSites)

[WebMonSettings_Additions]
@							= $SettingsGroup sz(p,a) a(la) xy(,14)
Scripts         			= t(check) xy(10,7) sz(a,a) a(la) v(sc.enabled)

[GeoSecuritySettingsDlg]
@  = [StyledWindowT_Small] at(dragable,a_ok,a_cancel,fixstyle) subst( BodyEx( [GeoSecuritySettingsList] sz(p,210) ) ) sz(300,a) alias(taskedit) h(24669)


[WebMonSettingsWhiteList]
@  = [StyledWindowT_Small] at(dragable,a_ok,a_cancel,fixstyle) subst( BodyEx( [WebMonSettings_TrustedSites_Body] ) ) sz(300,a) alias(taskedit) h(14931)

[WebMonSettings_TrustedSites_Body]
@    = sz(p,a) a(lt)
List = [WebMonSettings_TrustedSites_List]

[WebMonSettings_TrustedSites_List]
@       = $List at(noheader) v(httpscan.TrustedSites) sz(p,210) alias(vector) unique(tolower(Rule)==tolower(newItem.Rule))
Name    = at(checked) text(Rule) v(Enabled)
footer  = [Grid.Footer2.Template] subst(Add(onclick(dialog("WebTrustedSites_Edit"))))

[MailAttachmentFilter_Edit]
@ = [EditSimpleItem] subst(Example()) h(5060) ext(1)

[WebTrustedSites_Edit]
@ = [EditSimpleItem] subst(Name(v(Rule)) Example() ) onok( (isValidMask(Rule))? true : (balloon("MaskIsWrong"),false) ) h(5115) ext(1) 

[CompoundFilesSettings]
@    = [StyledWindowT_Small] at(dragable,a_ok,a_cancel) subst( BodyEx( [CompoundFilesSettings_Body] ) ) sz(374,a) alias(taskedit) h(type == "oas" ? 4818 : ($IsKAT ? 15750 : 23917))

[CompoundFilesSettings_Body]
@               = sz(p,a)
BackgroundScan  = [CompoundFilesSettings_Body_BackgroundScan]
SizeLimit       = [CompoundFilesSettings_Body_SizeLimit]

[CompoundFilesSettings_Body_BackgroundScan]
@                   = $SettingsGroup xy(,,,7) use(type == "oas")
PostponeSizeCheck   = $Check xy(0,7) v(UseCompoundPostponeSize)
Descr               = sz(a,a) a(la) xy(,7) f("Normal_Descr")
Label2              = sz(a,a) a(la) xy(,12)
PostponeSizeLabel   = a(rs) sz(25,a) enable(UseCompoundPostponeSize) xy(60,)
PostponeSizeValue   = t(edit) at(number) nl(0,9999) a(ps) sz(65,a) xy($Edit_CommentOffsetX,$Edit_CenterOffsetY) v(CompoundPostponeSize) enable(UseCompoundPostponeSize)
Label1              = sz(a,a) a(la) xy(,7) f("Normal_Descr")

[CompoundFilesSettings_Body_SizeLimit]
@               = $SettingsGroup xy(0,,,7)
SkipSizeCheck   = $Check xy(,7) v(UseSizeLimit)
Label2          = sz(a,a) a(la) xy(,12)
SkipSizeLabel   = a(rs) sz(25,a) enable(UseSizeLimit) xy(60,)
SkipSizeValue   = t(edit) at(number) nl(1,9999) a(ps) sz(65,a) xy($Edit_CommentOffsetX,$Edit_CenterOffsetY) v(SizeLimit) enable(UseSizeLimit)
Label1          = sz(a,a) a(la) xy(,7,,) f("Normal_Descr")

[AV_Home_Prot_Hdr.Enabled.menu]
@           = t(menu)
Enabled     = t(menuitem) text($Enabled)  v("enable:" + name)
Disabled    = t(menuitem) text($Disabled) v("disable:" + name)
Details     = t(menuitem) text($Details)  v("dialog:ErrorDescription") use(state & #StateFlagMalfunction)

[AV_Home_Level_Hdr.Level.menu]
@           = t(menu)
High        = t(menuitem) text($High)   v("level:#SETTINGS_LEVEL_HIGH")
Medium      = t(menuitem) text($Medium) v("level:#SETTINGS_LEVEL_DEFAULT")
Low         = t(menuitem) text($Low)    v("level:#SETTINGS_LEVEL_LOW")
Separator   = t(menuitem)
Custom      = t(menuitem) text($Customize) v("settings:Antivirus")

;------------- WebToolbar_Plugin.Settings_Dlg -------------

[WebToolbar_Plugin.Settings_Dlg]
@  = [StyledWindowT_Small] at(dragable,a_ok,a_cancel) subst( BodyEx( [WebToolbar_Plugin.Settings_DlgBody] ) ) sz(450,a) h(27269)

[WebToolbar_Plugin.Settings_DlgBody]
$ShowPluginSettings = 1
; (ProductLoaded && ComponentEnabled)
@		= $DlgBodyAttr mg(8,8,8,24) sz(p,a) ns(WebToolBar)
Descr	= [WebToolbar_Plugin.Settings_DlgBody_Descr] enable($ShowPluginSettings)
Settings= [WebToolbar_Plugin.Settings_DlgBody_Settings] enable($ShowPluginSettings)

[WebToolbar_Plugin.Settings_DlgBody_Descr]
$iconMargin = 97
@		= sz(p,a) a(lt)
Icon	= a(lt) i("DangerMeter")
Info	= a(lt) xy($iconMargin, 2) f("Wizard_Caption")
ExtInfo	= a(la) xy($iconMargin, 4)

[WebToolbar_Plugin.Settings_DlgBody_Settings]
@			= a(la) xy(,20) sz(p,a)
Line        = sz(p,1) a(la) xy(,,,17) bg("WizardLine")
CheckEnable = $Check  xy(,5) v(PluginEnabled) f("Normal_Bold")
Settings	= $Button_Medium a(rs) xy(,-4) sz(100,24) onclick(dialog("[WebToolbar_Plugin.SettingsEx_Dlg] alias(taskedit) ns(WebToolBar)")) enable(ctl.CheckEnable.value)
CheckSites 	= [WebToolbar_Plugin.Settings_DlgBody_CheckSites] enable(ctl.CheckEnable.value)

[WebToolbar_Plugin.Settings_DlgBody_CheckSites]
@            = xy(14,7) a(la) v(HighlightType) at(enum)
CheckAll     = $Radio xy(5,) v(#WebToolbar_Plugin_CheckAll)
CheckList    = $Radio xy(5,7) v(#WebToolbar_Plugin_CheckList)

[WebToolbar_Plugin.Settings_DlgBody_TypeOnGrp]
@		= $SettingsGroup xy(0,)
;Check	= $Check a(lt) v(PluginEnabled)
Choices	= [WebToolbar_Plugin.Settings_DlgBody_TypeOnGrp_SubType]

[WebToolbar_Plugin.Settings_DlgBody_TypeOnGrp_SubType]
@            = v(HighlightType) sz(p,a) mg(,,,10)
CheckEnable = $Check  xy(,18) v(PluginEnabled)
CheckType	= [WebToolbar_Plugin.Settings_DlgBody_TypeOnGrp_SubType_Type] enable(ctl.CheckEnable.value)

[WebToolbar_Plugin.Settings_DlgBody_TypeOnGrp_SubType_Type]
@           = a(la) sz(p,a) v(inout(HighlightType, if(ctl.CheckEnable.value, HighlightType = ctl.CheckType.value))) at(enum)
CheckAll     = $Radio xy(20,10) v(#WebToolbar_Plugin_CheckAll)
CheckAllBtn  = $Button_Medium a(rs) onclick(dialog("WebToolbar_Plugin.Settings_WhiteList_Dlg")) enable(ctl.CheckAll.selected && ctl.CheckEnable.value)
CheckList    = $Radio xy(20,5) v(#WebToolbar_Plugin_CheckList)
CheckListBtn = $Button_Medium a(rs) onclick(dialog("WebToolbar_Plugin.Settings_CheckList_Dlg")) enable(ctl.CheckList.selected && ctl.CheckEnable.value)

[WebToolbar_Plugin.Settings_DlgBody_TypeOffGrp]
@           = xy(4,68) sz(p,a)
Status1		= a(lt)
Status2		= t(richedit) at(readonly,nofocus,noborder) a(la) xy(,20)

;-------- WebToolbar_Plugin.Settings_WhiteList_Dlg --------

[WebToolbar_Plugin.Settings_WhiteList_Dlg]
@    = [StyledWindowT_Small] at(dragable,a_ok,a_cancel) subst( BodyEx( [WebToolbar_Plugin.Settings_WhiteList_DlgBody] ) ) sz(470,180) at(resizable) h(14931)

[WebToolbar_Plugin.Settings_WhiteList_DlgBody]
@		= sz(p,p) a(lt)
List	= [WebToolbar_Plugin.Settings_WhiteList]

[WebToolbar_Plugin.Settings_WhiteList]
@       = $List alias(vector) sz(p,p) at(checked,noheader) v(WhiteList) unique(tolower(Name)==tolower(newItem.Name)) 
Name    = at(checked) text(Name) v(Enabled) sort(,sortup)
footer  = [Grid.Footer2.Template] subst(Add(onclick(dialog("WebToolbar_Plugin.Settings_Url_Edit"))) Import(use(bindok("Gui")) onclick(import(f_browseFileOpen($List_Import, "txt"), $ImportAll, msg("AnyError")))) Export(use(bindok("Gui")) onclick(export(f_browseFileSave($List_Export, "txt"), $ExportAll, msg("AnyError"))))))

;-------- WebToolbar_Plugin.Settings_CheckList_Dlg --------

[WebToolbar_Plugin.Settings_CheckList_Dlg]
@    = [StyledWindowT_Small] at(resizable,dragable,a_ok,a_cancel) subst( BodyEx( [WebToolbar_Plugin.Settings_CheckList_DlgBody] ) ) sz(470,180) h(15888)

[WebToolbar_Plugin.Settings_CheckList_DlgBody]
@		= sz(p,p) a(lt)
List	= [WebToolbar_Plugin.Settings_CheckList]

[WebToolbar_Plugin.Settings_CheckList]
@       = $List alias(vector) sz(p,p) at(checked,noheader) v(CheckList) unique(tolower(Name)==tolower(newItem.Name))
Name    = at(checked) text(Name) v(Enabled) sort(,sortup)
footer  = [Grid.Footer2.Template] subst(Add(onclick(dialog("WebToolbar_Plugin.Settings_Url_Edit"))) Import(use(bindok("Gui")) onclick(import(f_browseFileOpen($List_Import, "txt"), $ImportAll, msg("AnyError")))) Export(use(bindok("Gui")) onclick(export(f_browseFileSave($List_Export, "txt"), $ExportAll, msg("AnyError"))))))

;----------- WebToolbar_Plugin.Settings_Url_Edit ---------------

[WebToolbar_Plugin.Settings_Url_Edit]
@ = [EditSimpleItem] subst( Example() )  ext(1) h(5115)

;-------- WebToolbar_Plugin.InProductSettings_Dlg ---------

[WebToolbar_Plugin.InProductSettings_Dlg]
@  = [StyledWindowT_Small] at(dragable,a_ok,a_cancel) subst( BodyEx( [WebToolbar_Plugin.InProductSettings_DlgBody] ) ) sz(500,a) alias(taskedit) ns(WebToolBar) h(27269)

[WebToolbar_Plugin.InProductSettings_DlgBody]
@		= $DlgBodyAttr mg(5,5) sz(p,a)
Descr	= [WebToolbar_Plugin.InProductSettings_DlgBody_DescrGrp]
TypeOn 	= [WebToolbar_Plugin.InProductSettings_DlgBody_TypeOnGrp]

[WebToolbar_Plugin.InProductSettings_DlgBody_DescrGrp]
@		= sz(p,a)
Icon	= a(lt) xy(,7) i("DangerMeter")
Text	= a(ls) xy(85,)

[WebToolbar_Plugin.InProductSettings_DlgBody_TypeOnGrp]
@		= sz(p,a) a(la) xy(7,15)
Check	= $Check a(lt) v(PluginEnabled) enable(0)
Choices	= [WebToolbar_Plugin.Settings_DlgBody_TypeOnGrp_SubType]

;-----------WebMonSettings2-----------

[WebMonSettings2]
$attribute = at(dragable,a_ok,a_cancel,minimizable,fixstyle)
@    = [StyledWindowT_Small_Tab] $attribute subst( BodyEx( [WebMonSettings2_Body] ) ) sz(500,460) alias(taskedit) text($ProfileName) h(14614)

[WebMonSettings2_Body]
@ = $Tab at(rememberdata) mg(7,7)
General     = [WebMonSettings2_Tab_General]
GreenZone   = [WebMonSettings2_Tab_GreenZone]
GeoSecurity = [WebMonSettings2_Tab_GeoSecurity] use(f_isInstalled("Geo_Security"))
TrustedAddr = [WebMonSettings2_Tab_TrustedAddr]
OnlineBanking = [WebMonSettings2_Tab_OnlineBanking] use(f_isInstalled("OnlineBanking"))

[WebMonSettings2_Tab_General]
@           = sz(p,p) h(14614)
CheckUrl	= [WebMonSettings_CheckUrl] xy(,8)
AvSettings	= [WebMonSettings_AvSettings] xy(,8)
Additions	= [WebMonSettings2_Additions]

[WebMonSettings_CheckUrl]
$shtx     = 5
$shty     = 7
@						= $SettingsGroup xy(0,)
EnableWMUFCheck 		= t(check) sz(a,a) v(httpscan.HTTPSettings.UseWMUF) a(la) xy(,4,,$shty) 
EnableAntiphishingCheck = t(check) sz(a,a) v(httpscan.HTTPSettings.UseAntiphishing) a(la) xy(,,,$shty) 
AntiphishingSettings	= $Button_Medium a(la) xy(18) onclick(dialog("[AntiphishingSettings_Dlg] alias(taskedit) ns(Web_Monitoring)")) enable(httpscan.HTTPSettings.UseAntiphishing)

[WebMonSettings_AvSettings]
$shtx     = 5
$shty     = 7
@			= $SettingsGroup xy(0,)  onok( httpscan.EmulScriptEnable = httpscan.EmulEnable; httpscan.EmulScriptValue = switch(ctl.HeurParams.Val.value, "EmulatorJIMLevels_Web"))
Heur		= t(check) sz(a,a) a(la) xy(,,,$shty) v(httpscan.EmulEnable)
HeurParams	= [HeuristicParams] enable(httpscan.EmulEnable) subst(Val(v(bswitch(httpscan.EmulValue,"EmulatorLevels_Web"))))

[WebMonSettings2_Additions]
@			        = $SettingsGroup sz(p,a) a(la) xy(,22)
UseBufCacheTime     = $Check   xy(,7) v(httpscan.HTTPSettings.UseTimeLimit)

[WebMonSettings2_Tab_GreenZone]
@ = sz(p,p) h(15887)
URLChecking = [WebMonSettings2_URL_Checking] xy(,8)
URLBlocking = [WebMonSettings2_URL_Blocking] use($IsKIS)

[WebMonSettings2_URL_Checking]
$shtx     = 5
@           = $SettingsGroup xy(0,)
Desc        = a(la) sz(p,a)
Choices	    = [WebMonSettings2_URL_Checking_Choices]

[WebMonSettings2_URL_Checking_Choices]
$shtx		= 5
@           = a(la) sz(p,a)
CheckEnable = $Check  xy(,18) v(WebToolBar.PluginEnabled) f("Normal_Bold")
Settings	= $Button_Medium a(rs) xy(,-4) sz(100,24) onclick(dialog("[WebToolbar_Plugin.SettingsEx_Dlg] alias(taskedit) ns(WebToolBar)")) enable(ctl.CheckEnable.value)
CheckType	= [WebMonSettings2_URL_Checking_Choices_Type] enable(ctl.CheckEnable.value)

[WebMonSettings2_URL_Checking_Choices_Type]
$shtx		= 5
@           = a(la) sz(p,a) xy() v(inout(WebToolBar.HighlightType, if(ctl.CheckEnable.value,WebToolBar.HighlightType = ctl.CheckType.value))) at(enum)
Info		 = a(la) xy(18,18) sz(p,a)
CheckAll	 = $Radio xy(18,15) v(#WebToolbar_Plugin_CheckAll) f(ctl.selected? "Normal_Bold":"Normal") 
CheckAllBtn	 = $Button_Medium a(rs) xy(,-4) sz(100,24) onclick(dialog("[WebToolbar_Plugin.Settings_WhiteList_Dlg] alias(taskedit) ns(WebToolBar)")) enable(ctl.CheckAll.selected && ctl.CheckEnable.value)
CheckList 	 = $Radio xy(18,7) v(#WebToolbar_Plugin_CheckList) f(ctl.selected? "Normal_Bold":"Normal")
CheckListBtn = $Button_Medium a(rs) xy(,-4) sz(100,24) onclick(dialog("[WebToolbar_Plugin.Settings_CheckList_Dlg] alias(taskedit) ns(WebToolBar)")) enable(ctl.CheckList.selected && ctl.CheckEnable.value)

[WebMonSettings2_URL_Blocking]
$shtx        = 5
@			 = $SettingsGroup sz(p,a) a(la) xy(0,22) use(!$IsKAV)
Desc         = a(la) sz(p,a)
BlockURL     = t(check) a(la) sz(a,a) xy(,18) f("Normal_Bold") v(httpscan.HTTPSettings.UseCloudService)
BlockURLInfo = $ParamInfoIcon onclick(url($HelpURLSettingsWebMonBlockURL)))

[WebMonSettings2_Tab_GeoSecurity]
@              = sz(p,p) h(24669) mg(7,7)
Desc           = a(lt) sz(p,a)
UseGeoSecurity = t(check) a(la) xy(,18) sz(a,a) f("Normal_Bold") v(httpscan.HTTPSettings.UseGeoSecurity)
GeoSecurityInfo = $ParamInfoIcon onclick(url($HelpURLSettingsGeoSecurity))
ListDescr      = a(la) sz(p,a) xy(,7) visible(ctl.text)
List           = [WebMonSettings2_Tab_GeoSecurity_List] xy(,3)

[WebMonSettings2_Tab_GeoSecurity_List]
@       = a(la) sz(p,p) enable(httpscan.HTTPSettings.UseGeoSecurity) b(System)
List    = [WebMonSettings2_Tab_GeoSecurity_List_List]
Toolbar = [Grid.Toolbar.Template] a(lt) t(listtoolbar) b() subst(Add(use(0)) Edit(use(0)) Delete(use(0)) \
	Allow(use(1) enable(canEdit()&&Permissions!=#tld_allow) onclick(edit(((Permissions = #tld_allow),true)))) \
	Deny(use(1) enable(canEdit()&&Permissions!=#tld_block) onclick(edit(((Permissions = #tld_block),true)))) \
	Ask(use(1) enable(canEdit()&&Permissions!=#tld_unknown) onclick(edit(((Permissions = #tld_unknown),true)))) \
)

[WebMonSettings2_Tab_GeoSecurity_List_List]
@       = $ListToolbar v(Geo_security.DomainInfoList) alias(vector) unique(tolower(TLD)==tolower(newItem.TLD)) filter(Generic == 0)
Access  = ia(cc) i(s_DomainDescriptionIcon(Permissions)) text("") sz(70)
Domain	= a(cc) text(TLD) sz(60)
Region  = text(s_ISO3166_1(TLD, TLD_Region)) sz(173)
Rate    = text(s_GeoSecurityRegionRate(Rate)) sz(120)
;footer  = [Grid.Footer2.Template] subst(Edit(use(0)) Add(use(0)))

[WebMonSettings2_Tab_TrustedAddr]
@               = sz(p,p) h(24679) mg(7,7)
Desc            = a(lt) sz(p,a)
EnableWhiteList = t(check) a(la) xy(,18) sz(a,a) f("Normal_Bold") v(httpscan.UseTrustedSites) a(la)
List            = [WebMonSettings2_Tab_TrustedAddr_List]

[WebMonSettings2_Tab_TrustedAddr_List]
@            = a(la) xy(,18) sz(p,p) enable(httpscan.UseTrustedSites) b(System)
List         = [WebMonSettings2_Tab_TrustedAddr_List_List]
Toolbar      = [Grid.Toolbar.Template] a(lt) t(listtoolbar) b() subst( \
Add(onclick(add( dialog("WebTrustedSites_Edit", p_new(true)) ))) \
Edit(onclick(edit( dialog("WebTrustedSites_Edit") ))) \
)

[WebMonSettings2_Tab_TrustedAddr_List_List]
@       = $ListToolbar at(noheader,noborder) v(httpscan.TrustedSites) alias(vector) unique(tolower(Rule)==tolower(newItem.Rule))
Name    = at(checked) text(Rule) v(Enabled)
;footer  = [Grid.Footer2.Template] subst(Add(onclick(dialog("WebTrustedSites_Edit"))))

[WebMonSettings2_Tab_OnlineBanking]
@               = sz(p,p) h(24684)
Desc            = a(lt) sz(p,a) xy(15,$Group_Shift,15,)
EnableOnlineBanking = t(check) a(la) xy(15,12) sz(a,a) f("Normal_Bold") v(OnlineBanking.PerUserEnabled) a(la) onclick(httpscan.HTTPSettings.UseOnlineBanking = !httpscan.HTTPSettings.UseOnlineBanking; if(ctl.value,(if(!global.SslWizardCompleted,(f_StartInstallSslCertWizard())))))
OnlineBankingInfo   = $ParamInfoIcon onclick(url($HelpURLSettingsOnlineBanking)))
UserIncludesList= a(la) sz(p,a) xy(15,12,15,)
List            = [WebMonSettings2_Tab_OnlineBanking_List]

[WebMonSettings2_Tab_OnlineBanking_List]
@            = a(la) xy(15,18,15,) sz(p,p) enable(OnlineBanking.PerUserEnabled) b(System)
List         = [WebMonSettings2_Tab_OnlineBanking_List_List]
Toolbar      = [Grid.Toolbar.Template] a(lt) t(listtoolbar) b() subst( \
Add(onclick(add( dialog("WebTrustedSites_Edit", p_new(true)) ))) \
Edit(onclick(edit( dialog("WebTrustedSites_Edit") ))) \
)

[WebMonSettings2_Tab_OnlineBanking_List_List]
@       = $ListToolbar at(noheader,noborder) v(OnlineBanking.UserBankingURLs) alias(vector) unique(tolower(Rule)==tolower(newItem.Rule))
Name    = at(checked) text(Rule) v(Enabled)


;-------- AntiphishingSettings_Dlg --------

[AntiphishingSettings_Dlg]
@    = [StyledWindowT_Small] at(dragable,a_ok,a_cancel) subst( BodyEx( [AntiphishingSettings_DlgBody] ) ) sz(a,a) h(42119)

[AntiphishingSettings_DlgBody]
@		 = sz(a,a) a(lt)
Heuristic= [AntiphishingSettings_Heuristic]

[AntiphishingSettings_Heuristic]
UseHeuristic = t(check) sz(a,a) a(la) xy(,12) v(httpscan.HTTPSettings.AntiPhishingSettings.UseHeuristic)
HeuristicParams = [HeuristicParams] enable(httpscan.HTTPSettings.AntiPhishingSettings.UseHeuristic) subst(Val(v(httpscan.HTTPSettings.AntiPhishingSettings.HeuristicLevel)))

;-------- WebToolbar_Plugin.SettingsEx_Dlg --------
[WebToolbar_Plugin.SettingsEx_Dlg]
@    = [StyledWindowT_Small] at(dragable,a_ok,a_cancel) subst( BodyEx( [WebToolbar_Plugin.SettingsEx_DlgBody] ) ) sz(470, 500) h(43912)

[WebToolbar_Plugin.SettingsEx_DlgBody]
@			= sz(p,a) 
CheckLinks  = [WebToolbar_Plugin.SettingsEx_CheckLinks]
CategoriesSet = [WebToolbar_Plugin.SettingsEx_Categories]

[WebToolbar_Plugin.SettingsEx_CheckLinks]
@            = $SettingsGroup xy(,5) v(LinksMode)
CheckInfo	 = a(ls) 
CheckAll     = $Radio xy(,10) v(#WebToolbar_GettingLinksAll)
CheckRelated = $Radio xy(,5) v(#WebToolbar_GettingLinksRelated)

[WebToolbar_Plugin.SettingsEx_Categories]
@			  = $SettingsGroup xy(0,10)
UseCategories = $Check a(lt) v(UseCategories)
CategoriesSet = [WebToolbar_Plugin.SettingsEx_CategoriesSet] enable(ctl.UseCategories.value)

[WebToolbar_Plugin.SettingsEx_CategoriesSet]
@					= sz(p,a) a(la) xy(,10)
Description			= a(la)
SelectAll			= $Link a(la) xy(, 10) f("Hotlink_Normal") onclick(Categories=#WtbCategoriesAll) enable(Categories & #CategoriesAll != #CategoriesAll)
SelectNone			= $Link a(as) xy(20) f("Hotlink_Normal") onclick(Categories=#WtbCategoriesNone) enable(signbitsnum(Categories & #CategoriesAll) > 0)

CategoryPorno		= $Check xy(,10) v(bmask(Categories, #WtbCategoryPorno ))
CategoryProxy       = $Check a(ls) xy(200)  v(bmask(Categories, #WtbCategoryProxy ))
CategorySoftware    = $Check xy(,10) v(bmask(Categories, #WtbCategorySoftware ))
CategoryCreditCards = $Check a(ls) xy(200) v(bmask(Categories, #WtbCategoryCreditCards ))
CategoryDrugs       = $Check xy(,10) v(bmask(Categories, #WtbCategoryDrugs ))
CategoryChat        = $Check a(ls) xy(200) v(bmask(Categories, #WtbCategoryChat ))
CategoryViolence    = $Check xy(,10) v(bmask(Categories, #WtbCategoryViolence ))
CategoryCasualGames = $Check a(ls) xy(200) v(bmask(Categories, #WtbCategoryCasualGames ))
CategoryUncens      = $Check xy(,10) v(bmask(Categories, #WtbCategoryUncens ))
CategoryWebMail     = $Check a(ls) xy(200) v(bmask(Categories, #WtbCategoryWebMail ))
CategoryWeapons     = $Check xy(,10) v(bmask(Categories, #WtbCategoryWeapons ))
CategoryShops       = $Check a(ls) xy(200) v(bmask(Categories, #WtbCategoryShops ))
CategoryGambling    = $Check xy(,10) v(bmask(Categories, #WtbCategoryGambling ))
CategorySocialNets  = $Check a(ls) xy(200) v(bmask(Categories, #WtbCategorySocialNets ))


